(function($) {
	/* --------------------
	* init
	* event
	* function
	* addPreLoader
	* loadXml
	* showInfo
	* escapeHTML
	* loadPr
	* changePr
	* setPr
	* searchList
	* modalWindow
	* scrollTop
	* scrollPager
	* loadSiCata
	* setSelect
	-------------------- */
	/* --------------------
	* init
	-------------------- */
	'use strict';
	_.templateSettings = {
		evaluate: /\[\[(.+?)\]\]/g,
		interpolate: /\{\{(.+?)\}\}/g
	};

	let obj = [],
		gyo, gakka, radioValue;
	const imgPath = mp_env.context + '/media/stu/img/common/loading.gif';
	let prRadio = Array.prototype.slice.call(document.getElementsByName('pr_radio'));

	/* --------------------
	* event
	-------------------- */
	$(document).on('ready', function() {
		addPreLoader();
		searchList();
		scrollTop();
	});

	/* --------------------
	* addPreLoader
	-------------------- */
	function addPreLoader() {
		$('#mp_preloader').append('<div id="mp_loading"><img src=' + imgPath + '></div>');
		loadXml(showInfo);
	}

	/* --------------------
	* loadXml
	-------------------- */
	function loadXml(callback) {
		var path = mp_env.context + '/open/navg/k/offers/xml/resume_es.xml';
		$.ajax({
			url: path,
			dataType: 'xml',
			type: 'GET'
		}).done(function(xml) {
			var $items = $(xml).find('items'),
				$this,
				prSelfText, prAbsorbedText, prActivitText;

			$items.each(function() {
				let gyoArr = [],
					gyoList = [];
				$this = $(this);
				if (mp_usr.scoutPossibleFlg === 'true') {
					prSelfText = escapeHTML($this.find('pr_self').text());
					prAbsorbedText = escapeHTML($this.find('pr_absorbed').text());
					prActivitText = escapeHTML($this.find('pr_activit').text());
				} else {
					prSelfText = MpUtility.cutText(escapeHTML($this.find('pr_self').text()), 100);
					prAbsorbedText = MpUtility.cutText(escapeHTML($this.find('pr_absorbed').text()), 100);
					prActivitText = MpUtility.cutText(escapeHTML($this.find('pr_activit').text()), 100);
				}
				gyoArr = [$this.find('gyo01').text(), $this.find('gyo02').text(), $this.find('gyo03').text()];
				for (let i = 0; i < gyoArr.length; i++) {
					if (gyoArr[i]) {
						gyoList.push(gyoArr[i]);
					}
				}
				obj.push({
					item_id: escapeHTML($this.find('item_id').text()),
					sotunen: escapeHTML($this.find('sotunen').text()),
					university: escapeHTML($this.find('university').text()),
					gakka: escapeHTML($this.find('gakka').text()),
					gyo01: escapeHTML($this.find('gyo01').text()),
					gyo02: escapeHTML($this.find('gyo02').text()),
					gyo03: escapeHTML($this.find('gyo03').text()),
					gyoList: gyoList.length,
					syo01: escapeHTML($this.find('syo01').text()),
					syo02: escapeHTML($this.find('syo02').text()),
					syo03: escapeHTML($this.find('syo03').text()),
					pr_self: prSelfText,
					pr_absorbed: prAbsorbedText,
					pr_activit: prActivitText
				});
			});
			callback(obj, gyo, gakka, 'load');
		}).fail(function() {
			$('#mp_preloader').empty();
			$('#mp_error_xml').removeClass('mp_dn');
			$('#btn_clear, #btn_search').prop('disabled', true);
		});
	}

	/* --------------------
	* showInfo
	-------------------- */
	function showInfo(obj, gyo, gakka, timing) {
		let $ul = $('.js_es_list'),
			_tmp = _.template($('.js_tmp').html());

		$('#mp_error_xml, #mp_no_result').addClass('mp_dn');

		if (gyo || gakka) {
			let result = obj.filter(function(value) {
				let gyoRes = false;
				if (gyo) {
					[value.gyo01, value.gyo02, value.gyo03].forEach(function(e) {
						if (e.indexOf(gyo) > -1) {
							gyoRes = true;
						}
					});
				}
				if (!gakka) {
					if (gyoRes) {
						return true;
					}
				} else if (!gyo) {
					if (value.gakka === gakka) {
						return true;
					}
				} else {
					if (gyoRes && value.gakka === gakka) {
						return true;
					}
				}
			});

			if (result.length == 0) {
				$('#mp_result').addClass('mp_dn');
				$('#mp_preloader').empty().append('<div id="mp_loading"><img src=' + imgPath + '></div>');

				function loadingEnd() {
					$('#mp_preloader').empty();
					$('#mp_no_result').removeClass('mp_dn');
				}
				setTimeout(loadingEnd, 500);
				MpUtility.setSiCata().send({
					'clk': 'r21rn3751',
					'eVar': {
						'141': '0'
					}
				});
				return false;
			}

			obj = result;
		}

		$('#mp_pager').pagination({
			dataSource: obj,
			pageSize: 50,
			prevText: '前へ',
			nextText: '次へ',
			callback: function(data, pagination) {
				let prLists;
				$ul[0].innerHTML = '';
				$ul.append(_tmp({
					lst: data,
					gyoSelected: gyo
				}));

				prLists = Array.prototype.slice.call(document.getElementsByClassName('mp_es_list_pr'));
				loadPr(prLists);
				changePr(prLists);
				$('#mp_pager').removeClass('mp_dn');

				if (mp_usr.scoutPossibleFlg === 'true') {
					$('.mp_modal_area').hide();
					$('.mp_es_list_pr dd').addClass('full_text');
				} else {
					$('.mp_other_btn').hide();
					modalWindow();
				}

				if (timing === 'search') {
					$('#mp_result').addClass('mp_dn');
					$('#mp_preloader').empty().append('<div id="mp_loading"><img src=' + imgPath + '></div>');

					function loadingEnd() {
						$('#mp_preloader').empty();
						$('#mp_result').removeClass('mp_dn');
						if (obj.length < 51) {
							$('#mp_pager').addClass('mp_dn');
						}
						timing = 'default';
						MpUtility.setSiCata().send({
							'clk': 'r21rn3751',
							'eVar': {
								'141': String(obj.length)
							}
						});
					}
					setTimeout(loadingEnd, 500);
				} else if (timing === 'load') {
					$('#mp_preloader').empty();
					$('#mp_result').removeClass('mp_dn');
					if (obj.length < 51) {
						$('#mp_pager').addClass('mp_dn');
					}
					timing = 'default';
					loadSiCata(obj.length);
				} else {
					$('#mp_preloader').empty();
				}
				setSelect(gyo, gakka);
				scrollPager();
			}
		});
	}

	/* --------------------
	* escapeHTML
	-------------------- */
	function escapeHTML(str) {
		return _.escape(str);
	}

	/* --------------------
	* loadPr
	-------------------- */
	function loadPr(prLists) {
		prRadio.forEach(function(e) {
			if (e.checked == true) {
				radioValue = e.value;
			}
		});
		setPr(prLists, radioValue);
	}

	/* --------------------
	* changePr
	-------------------- */
	function changePr(prLists) {
		prRadio.forEach(function(e) {
			e.onchange = function() {
				radioValue = e.value;
				setPr(prLists, radioValue);
				switch (radioValue) {
					case 'pr_self':
						radioValue = '自己PR';
						break;
					case 'pr_absorbed':
						radioValue = 'ガクチカ';
						break;
					case 'pr_activit':
						radioValue = '学業・ゼミ';
						break;
				}
				MpUtility.setSiCata().send({
					'eVar': {
						'143': radioValue
					}
				});
			};
		});
	}

	/* --------------------
	* setPr
	-------------------- */
	function setPr(prLists, radioValue) {
		prLists.forEach(function(list) {
			let details = list.children;
			for (let i = 0; i < details.length; i++) {
				details[i].style.display = details[i].className === radioValue ? "block" : "none";
			}
		});
	}

	/* --------------------
	* searchList
	-------------------- */
	function searchList() {
		$('#btn_search').on('click', function() {
			gyo = document.getElementById('gyo').value;
			gakka = document.getElementById('gakka').value;
			showInfo(obj, gyo, gakka, 'search');
		});
	}

	/* --------------------
	* modalWindow
	-------------------- */
	function modalWindow() {
		let modalButtons = Array.prototype.slice.call(document.getElementsByClassName('mp_open_btn'));
		let mWindows = Array.prototype.slice.call(document.getElementsByClassName('mp_modal_window'));
		let modalSteps = Array.prototype.slice.call(document.getElementsByClassName('mp_modal_steps'));
		let modalWindowClose = Array.prototype.slice.call(document.getElementsByClassName('mp_modal_window_close'));
		const modalBg = document.getElementById('mp_modal_bg');
		let scrollPosition;
		modalButtons.forEach(function(button) {
			button.onclick = function(e) {
				e.target.parentNode.nextElementSibling.style.display = 'block';
				scrollPosition = window.pageYOffset;
				document.body.style.top = '-' + scrollPosition + 'px';
				document.body.classList.add('mp_fixed');
				modalBg.style.display = 'block';
				MpUtility.setSiCata().send({
					'clk': 'r21rn3748'
				});
			};
		});
		modalWindowClose.forEach(function(close) {
			close.onclick = function(e) {
				e.target.parentNode.parentNode.style.display = 'none';
				document.body.classList.remove('mp_fixed');
				scrollPosition = window.scrollTo(0, scrollPosition);
				modalBg.style.display = 'none';
			};
		});
		modalBg.onclick = function() {
			mWindows.forEach(function(e) {
				e.style.display = 'none';
			});
			document.body.classList.remove('mp_fixed');
			scrollPosition = window.scrollTo(0, scrollPosition);
			modalBg.style.display = 'none';
		};
		modalSteps.forEach(function(e) {
			let step =
				mp_usr.oesRegistFlg === 'true' && mp_usr.oesSendPossibleFlg === 'true' && mp_usr.scoutRegistFlg === 'true' ? 3 :
				mp_usr.oesRegistFlg === 'true' && mp_usr.oesSendPossibleFlg === 'true' ? 2 :
				mp_usr.oesRegistFlg === 'true' ? 1 : false;
			if (step) {
				if (step == 1) {
					e.classList.add('mp_step02');
					e.children[0].classList.add('checked');
					e.parentNode.lastElementChild.children[0].innerText = '必須項目を入力';
				} else if (step == 2) {
					e.classList.add('mp_step03');
					e.children[0].classList.add('checked');
					e.children[1].classList.add('checked');
					e.parentNode.lastElementChild.children[0].innerText = 'スカウト受信をONにする';
					e.parentNode.lastElementChild.children[0].onclick = '';
					e.parentNode.lastElementChild.children[0].onclick = function() {
						window.open('https://open-es.com/scout/detail/', '_blank');
						MpUtility.setSiCata().send({
							'clk': 'r21rn3749'
						});
					};
				} else {
					e.classList.add('mp_step04');
					e.children[0].classList.add('checked');
					e.children[1].classList.add('checked');
					e.children[2].classList.add('checked');
					e.parentNode.lastElementChild.children[0].innerText = '50%以上記入する';
				}
			}
		});
	}

	/* --------------------
	* scrollTop
	-------------------- */
	function scrollTop() {
		$('#mp_bottom_text li:first-child a').on('click', function() {
			$('body,html').animate({
				scrollTop: 0
			}, 500, 'swing');
			return false;
		});
	}

	/* --------------------
	* scrollPager
	-------------------- */
	function scrollPager() {
		$('#mp_pager li').not('#mp_pager li.disabled, #mp_pager li.active').on('click', function() {
			function scrollDelay() {
				let pos = $('#mp_result').offset().top;
				$('body,html').scrollTop(pos);
			}
			setTimeout(scrollDelay, 200);
		});
	}

	/* --------------------
	* loadSiCata
	-------------------- */
	function loadSiCata(objLength) {
		let status =
			mp_usr.oesRegistFlg === 'true' && mp_usr.oesSendPossibleFlg === 'true' && mp_usr.scoutRegistFlg === 'true' && mp_usr.scoutPossibleFlg === 'true' ? 4 :
			mp_usr.oesRegistFlg === 'true' && mp_usr.oesSendPossibleFlg === 'true' && mp_usr.scoutRegistFlg === 'true' ? 3 :
			mp_usr.oesRegistFlg === 'true' && mp_usr.oesSendPossibleFlg === 'true' ? 2 :
			mp_usr.oesRegistFlg === 'true' ? 1 : 0;
		MpUtility.setSiCata().send({
			'eVar': {
				'140': String(status),
				'141': objLength,
				'143': '自己PR'
			}
		});
	}

	/* --------------------
	* setSelect
	-------------------- */
	function setSelect(gyo, gakka) {
		if (gyo) {
			$('#gyo')[0].selectedIndex = $('#gyo').find('option[value="' + gyo + '"]')[0].index;
		} else {
			$('#gyo')[0].selectedIndex = 0;
		}
		if (gakka) {
			$('#gakka')[0].selectedIndex = $('#gakka').find('option[value="' + gakka + '"]')[0].index;
		} else {
			$('#gakka')[0].selectedIndex = 0;
		}
	}

}(jQuery));